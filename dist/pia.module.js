/**!
 * Pia JS v0.1.2
 * @author phucbm
 * @homepage https://github.com/phucbm/pia
 * @license MIT 2025
 */
function e(e){return Date.parse("string"==typeof e?e:e.toString())}function t(t,n,r){return Math.floor(function(t,n){return e(n)-e(t)}(t,n)/function(e=""){const t=36e5,n=24*t,r={second:1e3,minute:6e4,hour:t,day:n,year:365*n};return["year","day","hour","minute","second"].includes(e)?r[e]:r}(r))}function n(e){if(!e)return!0;return!["session","never"].includes(e.expires)&&function(e){const t=r(e);if(null===t)return!1;const n=e.expires;return t>n}(e)}function r(e,n=void 0){n=n||e.unit;return["ms","second","minute","hour","day"].includes(n)?t(new Date(e.createdDate),new Date,n):null}function o(e,t,n={}){const r={expires:"never",...n},o=function(e){let t,n;if("string"==typeof e)if(["session","never"].includes(e))t=e;else{const r=e.trim().split(" ");switch(t=parseInt(r[0]),r[1]){case"day":case"days":n="day";break;case"hour":case"hours":n="hour"}}return"number"==typeof e&&(t=e,n="day"),{expires:t,unit:n}}(r.expires),s=function(e){return!!["hour","day"].includes(e)&&e}(o.unit),i=function(e){if("string"==typeof e)return["session","tab","current-tab"].includes(e)?"session":"never";return"number"==typeof e&&parseInt(e)}(o.expires),u=function(e){return"session"===e?"sessionStorage":"localStorage"}(i);return{key:e,valueType:typeof t,value:t,raw_expires:r.expires,expires:i,unit:s,storageType:u,arguments,createdDate:(new Date).toString()}}function s(e,t){const n=t.storageType,r=JSON.stringify(t);i(e)?.storageType!==n&&u(e),"sessionStorage"===n?sessionStorage.setItem(e,r):localStorage.setItem(e,r)}function i(e,t=!1){let r=localStorage.getItem(e);if(null===r&&(r=sessionStorage.getItem(e)),null===r)return r;const o=JSON.parse(r);return n(o)?(u(o.key,o.storageType),null):t?o:o.value}function u(e,t="localStorage"){"sessionStorage"===t?sessionStorage.removeItem(e):localStorage.removeItem(e)}class a{constructor(){}static isExpired(e){return n(i(e))}static update(e,t){if(!i(e))return void console.warn(`Updating undefined record "${e}" is not allowed.`);const n=i(e,!0);typeof t!==n.valueType&&console.warn(`Updating mismatched value types. Changing from ${n.valueType} to ${typeof t}.`),n.value=t,s(e,n)}static set(e,t,n={}){s(e,o(e,t,n))}static get(e,t=!1){return i(e,t)}static remove(e){return u(e)}static test(e,t=!1){if(!e){const e=Array.from({length:localStorage.length},((e,t)=>{const n=localStorage.key(t),r=a.get(n,!0);return r&&"object"==typeof r&&"expires"in r&&"key"in r&&"raw_expires"in r&&"storageType"in r&&"unit"in r&&"value"in r&&"valueType"in r?n:null})).filter(Boolean);return e.forEach((e=>a.test(e,!0))),null}const n=i(e,!0);let o;const s=[];return n?("number"==typeof n.expires?(s.push(`${n.expires-r(n)} ${n.unit}(s) left`),["second","minute","hour","day"].forEach((e=>{s.push(`created ${r(n,e)} ${e}(s) ago`)}))):s.push(n.expires),o={leftover:s,record:n}):o=`Record "${e}" not found.`,t&&(console.group("Test record:",e),console.table(s),console.log("record",n),console.groupEnd()),o}}window.Pia=a;